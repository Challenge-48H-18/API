<?php

namespace App\DataFixtures;

use App\Entity\Niveau;
use App\Entity\Post;
use App\Entity\State;
use App\Entity\Tag;
use App\Entity\User;
use DateTime;
use Doctrine\Bundle\FixturesBundle\ORMFixtureInterface;
use Doctrine\Persistence\ObjectManager;
use Faker;
use Symfony\Component\Security\Core\Role\Role;

class AppFixtures extends Fixture
{

    public function load(ObjectManager $manager): void
    {
    $tagsList = ['Dev', 'System', 'Reseaux', 'Cyber', 'IOT', 'GÃ©nÃ©ral'];
    $stateList = ['En cours', 'Terminer', 'Abandonner'];
    $niveauList = ['B1', 'B2', 'B3', 'M1', 'M2', 'Others'];
    $roleList = ['Admin', 'Users'];

    $tags = array();
    foreach ($tagsList as $name) {
        $tag = new Tag();
        $tag->setName($name);
        array_push($tags, $tag);
        $manager->persist($tag);
    }

    $states = array();
    foreach ($stateList as $name) {
        $state = new State();
        $state->setName($name);
        array_push($states, $state);
        $manager->persist($state);
    }

    $niveaux = array();
    for ($i = 0; $i <= 5; $i++) {
        $niveaux[$i] = new Niveau();
        $niveaux[$i]->setName($niveauList[$i]);
        $manager->persist($niveaux[$i]);
    }

    $users = array();
    $faker = Faker\Factory::create();
    for ($i = 0; $i < 30; $i++) {
        $users[$i] = new User();
        $users[$i]->setNiveau($niveaux[array_rand($niveaux)]);
        $users[$i]->setName($faker->firstName());
        $users[$i]->setPassword($faker->password(6,20));
        $users[$i]->addTag($tags[array_rand($tags)]);
        $users[$i]->setRole($roleList[array_rand($roleList)]);
        $manager->persist($users[$i]);
    }
    $posts = array();
        for ($i = 0; $i < 123;$i++){
            $posts[$i]= new Post();
            $posts[$i]->setState($states[array_rand($states)]);
            $posts[$i]->setTitle('test');
            $posts[$i]->setContent('Fuck la team');
            $posts[$i]->addTag($tags[array_rand($tags)]);
            $posts[$i]->setUserId($users[array_rand($users)]);
            $posts[$i]->setCratedAt(new DateTime());
            $manager->persist($posts[$i]);
        }




    $manager->flush();
    }
}
